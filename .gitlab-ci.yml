variables:
  AWS_DEFAULT_REGION: "us-east-1"

stages:
  - fmt
  - validate
  - plan
  - apply

image:
  name: hashicorp/terraform:light
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

before_script:
  - export AWS_WEB_IDENTITY_TOKEN_FILE=${CI_JOB_JWT}
  - export AWS_ROLE_ARN=${AWS_ROLE_ARN}
  - export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}

# -----------------------
# project1 pipeline jobs
# -----------------------
project1_fmt:
  stage: fmt
  script:
    - cd project1
    - rm -rf .terraform
    - terraform --version
    - terraform init -backend=false
    - terraform fmt -list=true -write=false -diff=true -check=true -recursive
  only:
    - merge_requests
    - main
    - develop

project1_validate:
  stage: validate
  script:
    - cd project1
    - rm -rf .terraform
    - terraform --version
    - terraform init -backend=false
    - terraform validate
  only:
    - merge_requests
    - main
    - develop

project1_plan:
  stage: plan
  script:
    - cd project1
    - rm -rf .terraform
    - terraform --version
    - terraform init
    - terraform plan
  only:
    - merge_requests
    - main
    - develop
  when: manual

project1_apply:
  stage: apply
  script:
    - cd project1
    - rm -rf .terraform
    - terraform --version
    - terraform init
    - terraform apply -auto-approve
  only:
    - main
  when: manual

# -----------------------
# project2 pipeline jobs
# -----------------------
project2_fmt:
  stage: fmt
  script:
    - cd project1
    - rm -rf .terraform
    - terraform --version
    - terraform init -backend=false
    - terraform fmt -list=true -write=false -diff=true -check=true -recursive
  only:
    - merge_requests
    - main
    - develop

project2_validate:
  stage: validate
  script:
    - cd project2
    - rm -rf .terraform
    - terraform --version
    - terraform init -backend=false
    - terraform validate
  only:
    - merge_requests
    - main
    - develop

project2_plan:
  stage: plan
  script:
    - cd project2
    - rm -rf .terraform
    - terraform --version
    - terraform init
    - terraform plan
  only:
    - merge_requests
    - main
    - develop
  when: manual

project2_apply:
  stage: apply
  script:
    - cd project2
    - rm -rf .terraform
    - terraform --version
    - terraform init
    - terraform apply -auto-approve
  only:
    - main
  when: manual
