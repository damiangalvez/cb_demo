stages:
  - fmt
  - validate
  - plan
  - json
  - apply

image:
  name: hashicorp/terraform:latest
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

# -----------------------
# project2 pipeline jobs
# -----------------------
project2_fmt:
  stage: fmt
  script:
    - echo "Checking configuration files format and style..."
    - cd project2
    - rm -rf .terraform
    - terraform --version
    - terraform init -backend=false
    - terraform fmt -list=true -write=false -diff=true -check=true -recursive
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - changes:
      - project2/**/*
  when: always

project2_validate:
  stage: validate
  script:
    - echo "Validating configuration files..."
    - cd project2
    - rm -rf .terraform
    - terraform --version
    - terraform init -backend=false
    - terraform validate
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - changes:
      - project2/**/*
  when: always

project2_plan:
  stage: plan
  extends: .assume-role
  script:
    - cd project2
    - rm -rf .terraform
    - terraform --version
    - terraform init
    - terraform plan -out=tfplan
  rules:
    - if: ($CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "develop") && $CI_PIPELINE_SOURCE == "merge_request_event"
    - changes:
      - project2/**/*
  artifacts:
    name: "project2-plan"
    paths:
      - project2/tfplan
    expire_in: 1 day

project2_json:
  stage: json
  script:
    - terraform show -json tfplan > tfplan.json
  dependencies: 
    - project1_plan
  rules:
    - if: ($CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "develop") && $CI_PIPELINE_SOURCE == "merge_request_event"
    - changes:
      - project1/**/*
  artifacts:
    name: "project1-json"
    paths:
      - project1/tfplan.json

project2_opa_validation:
  stage: opa_validation
  script:
    - ./opa eval 'data.terraform.policies.sg.allow' -d ../policies/ -i tfplan.json
  dependencies: 
    - project1_json
  rules:
    - if: ($CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "develop") && $CI_PIPELINE_SOURCE == "merge_request_event"
    - changes:
      - project1/**/*
  before_script:
    - wget -O opa https://openpolicyagent.org/downloads/v1.2.0/opa_linux_amd64_static
    - chmod 755 opa
    - ./opa version

project2_apply:
  stage: apply
  extends: .assume-role
  script:
    - cd project2
    - rm -rf .terraform
    - terraform --version
    - terraform init
    - terraform apply -auto-approve -input=false tfplan
  dependencies: 
    - project2_plan
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - changes:
      - project2/**/*
  when: manual
